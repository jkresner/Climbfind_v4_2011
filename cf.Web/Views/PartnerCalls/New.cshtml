@model NewPartnerCallViewModel
@{ CfPageTitleMaster.Set("New Partner Call");
   string placeType = ViewBag.PlaceType;
   bool disableIndoorOutdoor = (placeType == "Location");
   List<Area> intersectingAreas = ViewBag.InterectingAreas;
   bool placeDisallowed = (ViewBag.PlaceDisallowed != null && (bool)ViewBag.PlaceDisallowed);
   }

@if (placeDisallowed)
{
    <form>
        <div style="min-height:500px;padding-bottom:30px">
        <h1>Cannot post a PartnerCall&trade; here</h1>
        <p>You cannot post a PartnerCall&trade; for @ViewBag.Place.Name. Partner calls cannot be posted for countries, provinces, states or
         large areas that have been disabled by Climbfind admins, because too many other users would be alerted from a single PartnerCall&trade;
         due to the size or Climbfind population density  in that area.</p>
         <p>Please choose a smaller related area.</p>
         <br /><br />
         @if (intersectingAreas != null)
         {
             foreach (var a in intersectingAreas)
             { @(Html.ActionLink<PartnerCallsController>(c => c.New(a.ID), a.ShortDisplayName)) <text>|</text> }
         }
        
        </div>
    </form>
}
else
{

<style type="text/css">
    #call-suggestion { margin:-10px 0 10px 0px }
    #call-suggestion a { margin-left:5px;font-size:10px }
    .mapInfoBox { z-index:99999!important }
</style>

    using (Html.BeginForm("Create", "PartnerCalls", FormMethod.Post, new { id = "partnerCallForm" }))
    {
    @Html.HiddenFor(m => m.ParnterCallPlaceID) 
    <h1>New @placeType.ToLower() PartnerCall&trade; for <a href="@ViewBag.Place.SlugUrl">@ViewBag.Place.Name</a></h1>   
    
    <div id="call-suggestion"><p>
    @if (placeType == "Location")
    { <i>If you're flexible on where to climb, consider posting a more general call for an <b>area</b> like</i> }
    else
    { <i>You might (or might not) want to consider a more specific or more general area for your PartnerCall&trade; like </i> }
    
        @foreach (var a in intersectingAreas)
        {@(Html.ActionLink<PartnerCallsController>(c => c.New(a.ID), a.ShortDisplayName)) <text>|</text>}
    </p></div>
  
    <hr />
    
    <div class="editor-field" style="float:right;padding-top:5px">
        <div style="float:right;width:690px;overflow:hidden">
        @if (placeType == "Area") { @Html.Partial("AreaMap"); }
        else {
            <div style="height:370px;overflow:hidden">
            <div style="text-align:right;padding-right:10px;"><i>Does this <b><a id="improve-area-lnk" href="/moderators-project">location look incorrect?</a></b></i></div><hr />
            @Html.Partial("Maps/Bing7LocationMap", (Bing7MapWithLocationViewModel)ViewBag.LocationMapView)</div>
        }
        </div>
        <hr /><hr /><hr />
        @Html.ValidationSummary()
    </div> 
     
    <div style="float:left;width:270px">
    <div @if (disableIndoorOutdoor)
         { <text>style="display:none"></text>}>
    
        <div style="height:62px">
            <div class="editor-label"><label>Indoor / Outdoor</label></div>
            <div style="height:40px;padding-top:6px">
                <span style="float:left;display:block;width:60px">@Html.CheckBoxFor(m => m.ForIndoor)</span>
                <span style="float:left;display:block">@Html.CheckBoxFor(m => m.ForOutdoor)</span>
            </div>   
        </div>   
    </div>
    
    <div style="height:52px">
        <div class="editor-label"><label>Partner ability</label></div>
        <div class="editor-field">@Html.DropDownListFor(m => m.PreferredLevel, SelectLists.PartnerCallClimbingLevelSelectList) </div>
    </div>   
    <hr />
    <div style="height:62px">
        <div class="editor-label"><label>Start climbing</label> @Html.ValidationMessageFor(m => m.StartDate, "Start date required") @Html.ValidationMessageFor(m => m.StartTime)</div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.StartDate, new { style = "width:100px;float:left", @class = "jq_watermark", title = "Date" })
            @Html.TextBoxFor(m => m.StartTime, new { style = "width:50px;float:left", @class = "jq_watermark", title = "Time" })
        </div>
    </div>
    <div style="height:62px">
        <div class="editor-label">
            <label>End <i style="font-weight:normal">(optional)</i></label> @Html.ValidationMessageFor(m => m.EndDate) @Html.ValidationMessageFor(m => m.EndTime)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.EndDate, new { style = "width:100px;float:left", @class = "jq_watermark", title = "Date" })
            @Html.TextBoxFor(m => m.EndTime, new { style = "width:50px;float:left", @class = "jq_watermark", title = "Time" })
        </div>
    </div>
    
    <div class="editor-label"><label>@Html.LabelFor(m => m.Comment) @Html.ValidationMessageFor(m => m.Comment, "Please provide a comment")</label></div>
    <div class="editor-field">@Html.TextAreaFor(m => m.Comment, 10, 38, new { style = "width:278px;height:146px" })</div>
    <hr />
    <input type="submit" value="Go get 'em tiger!" class="SubmitBtn jBtn" style="font-size:24px;padding:10px 50px 10px 50px" /> 
    <hr />


    </div>
    
    <hr />
    <br /><br />
    }

<script src="@Stgs.StaticRt/js/jquery.timePicker.min.js" type="text/javascript"></script>

<script type="text/javascript">
    
    $(document).ready(function () {
        $("#StartTime").timePicker();
        $("#StartDate").datepicker({ minDate: new Date(@DateTime.Now.Year, @DateTime.Now.Month - 1, @DateTime.Now.Day), dateFormat: 'D dd M yy' });

        $("#EndTime").timePicker();
        $("#EndDate").datepicker({ minDate: new Date(@DateTime.Now.Year, @DateTime.Now.Month - 1, @DateTime.Now.Day), dateFormat: 'D dd M yy' });
    });

</script>
    
}