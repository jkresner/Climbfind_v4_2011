//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace cf.Entities
{
    public partial class PartnerCallReply
    {
        #region Primitive Properties
    
        public virtual System.Guid ID
        {
            get;
            set;
        }
    
        public virtual System.Guid PartnerCallID
        {
            get { return _partnerCallID; }
            set
            {
                if (_partnerCallID != value)
                {
                    if (PartnerCall != null && PartnerCall.ID != value)
                    {
                        PartnerCall = null;
                    }
                    _partnerCallID = value;
                }
            }
        }
        private System.Guid _partnerCallID;
    
        public virtual byte TypeID
        {
            get;
            set;
        }
    
        public virtual System.Guid UserID
        {
            get;
            set;
        }
    
        public virtual System.DateTime Utc
        {
            get;
            set;
        }
    
        public virtual string Message
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual PartnerCall PartnerCall
        {
            get { return _partnerCall; }
            set
            {
                if (!ReferenceEquals(_partnerCall, value))
                {
                    var previousValue = _partnerCall;
                    _partnerCall = value;
                    FixupPartnerCall(previousValue);
                }
            }
        }
        private PartnerCall _partnerCall;

        #endregion
        #region Association Fixup
    
        private void FixupPartnerCall(PartnerCall previousValue)
        {
            if (previousValue != null && previousValue.PartnerCallReplys.Contains(this))
            {
                previousValue.PartnerCallReplys.Remove(this);
            }
    
            if (PartnerCall != null)
            {
                if (!PartnerCall.PartnerCallReplys.Contains(this))
                {
                    PartnerCall.PartnerCallReplys.Add(this);
                }
                if (PartnerCallID != PartnerCall.ID)
                {
                    PartnerCallID = PartnerCall.ID;
                }
            }
        }

        #endregion
    }
}
