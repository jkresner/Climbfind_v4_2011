//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace cf.Entities
{
    public partial class Profile
    {
        #region Primitive Properties
    
        public virtual System.Guid ID
        {
            get;
            set;
        }
    
        public virtual string Email
        {
            get;
            set;
        }
    
        public virtual string FullName
        {
            get;
            set;
        }
    
        public virtual string UserName
        {
            get;
            set;
        }
    
        public virtual string NickName
        {
            get;
            set;
        }
    
        public virtual bool IsMale
        {
            get;
            set;
        }
    
        public virtual byte DisplayNameTypeID
        {
            get;
            set;
        }
    
        public virtual byte CountryID
        {
            get;
            set;
        }
    
        public virtual string Avatar
        {
            get;
            set;
        }
    
        public virtual string SlugUrlPart
        {
            get;
            set;
        }
    
        public virtual Nullable<long> FacebookID
        {
            get;
            set;
        }
    
        public virtual string FacebookToken
        {
            get;
            set;
        }
    
        public virtual string ContactNumber
        {
            get;
            set;
        }
    
        public virtual string GradesAverage
        {
            get;
            set;
        }
    
        public virtual string GradesMaximum
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> PlaceHome
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> PlaceMostRecent
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> PlaceFavorite1
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> PlaceFavorite2
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> PlaceFavorite3
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> PlaceFavorite4
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> PlaceFavorite5
        {
            get;
            set;
        }
    
        public virtual bool PrivacyShowOnPartnerSites
        {
            get;
            set;
        }
    
        public virtual bool PrivacyShowHistory
        {
            get;
            set;
        }
    
        public virtual bool PrivacyShowFeed
        {
            get;
            set;
        }
    
        public virtual bool PrivacyPostsDefaultIsPublic
        {
            get;
            set;
        }
    
        public virtual bool PrivacyAllowNewConversations
        {
            get;
            set;
        }
    
        public virtual bool PrivacyShowInSearch
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> PlaceMostRecentUtc
        {
            get;
            set;
        }
    
        public virtual bool FacebookPostAuthorized
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<Alert> Alerts
        {
            get
            {
                if (_alerts == null)
                {
                    var newCollection = new FixupCollection<Alert>();
                    newCollection.CollectionChanged += FixupAlerts;
                    _alerts = newCollection;
                }
                return _alerts;
            }
            set
            {
                if (!ReferenceEquals(_alerts, value))
                {
                    var previousValue = _alerts as FixupCollection<Alert>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAlerts;
                    }
                    _alerts = value;
                    var newValue = value as FixupCollection<Alert>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAlerts;
                    }
                }
            }
        }
        private ICollection<Alert> _alerts;
    
        public virtual ICollection<PartnerCallSubscription> PartnerCallSubscriptions
        {
            get
            {
                if (_partnerCallSubscriptions == null)
                {
                    var newCollection = new FixupCollection<PartnerCallSubscription>();
                    newCollection.CollectionChanged += FixupPartnerCallSubscriptions;
                    _partnerCallSubscriptions = newCollection;
                }
                return _partnerCallSubscriptions;
            }
            set
            {
                if (!ReferenceEquals(_partnerCallSubscriptions, value))
                {
                    var previousValue = _partnerCallSubscriptions as FixupCollection<PartnerCallSubscription>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPartnerCallSubscriptions;
                    }
                    _partnerCallSubscriptions = value;
                    var newValue = value as FixupCollection<PartnerCallSubscription>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPartnerCallSubscriptions;
                    }
                }
            }
        }
        private ICollection<PartnerCallSubscription> _partnerCallSubscriptions;
    
        public virtual ICollection<Post> Posts
        {
            get
            {
                if (_posts == null)
                {
                    var newCollection = new FixupCollection<Post>();
                    newCollection.CollectionChanged += FixupPosts;
                    _posts = newCollection;
                }
                return _posts;
            }
            set
            {
                if (!ReferenceEquals(_posts, value))
                {
                    var previousValue = _posts as FixupCollection<Post>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPosts;
                    }
                    _posts = value;
                    var newValue = value as FixupCollection<Post>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPosts;
                    }
                }
            }
        }
        private ICollection<Post> _posts;
    
        public virtual ICollection<Media> Media
        {
            get
            {
                if (_media == null)
                {
                    var newCollection = new FixupCollection<Media>();
                    newCollection.CollectionChanged += FixupMedia;
                    _media = newCollection;
                }
                return _media;
            }
            set
            {
                if (!ReferenceEquals(_media, value))
                {
                    var previousValue = _media as FixupCollection<Media>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMedia;
                    }
                    _media = value;
                    var newValue = value as FixupCollection<Media>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMedia;
                    }
                }
            }
        }
        private ICollection<Media> _media;
    
        public virtual ICollection<MediaOpinion> MediaOpinions
        {
            get
            {
                if (_mediaOpinions == null)
                {
                    var newCollection = new FixupCollection<MediaOpinion>();
                    newCollection.CollectionChanged += FixupMediaOpinions;
                    _mediaOpinions = newCollection;
                }
                return _mediaOpinions;
            }
            set
            {
                if (!ReferenceEquals(_mediaOpinions, value))
                {
                    var previousValue = _mediaOpinions as FixupCollection<MediaOpinion>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMediaOpinions;
                    }
                    _mediaOpinions = value;
                    var newValue = value as FixupCollection<MediaOpinion>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMediaOpinions;
                    }
                }
            }
        }
        private ICollection<MediaOpinion> _mediaOpinions;
    
        public virtual ICollection<UserPersonalityMedia> UserPersonalityMedias
        {
            get
            {
                if (_userPersonalityMedias == null)
                {
                    var newCollection = new FixupCollection<UserPersonalityMedia>();
                    newCollection.CollectionChanged += FixupUserPersonalityMedias;
                    _userPersonalityMedias = newCollection;
                }
                return _userPersonalityMedias;
            }
            set
            {
                if (!ReferenceEquals(_userPersonalityMedias, value))
                {
                    var previousValue = _userPersonalityMedias as FixupCollection<UserPersonalityMedia>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserPersonalityMedias;
                    }
                    _userPersonalityMedias = value;
                    var newValue = value as FixupCollection<UserPersonalityMedia>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserPersonalityMedias;
                    }
                }
            }
        }
        private ICollection<UserPersonalityMedia> _userPersonalityMedias;
    
        public virtual ICollection<CheckIn> CheckIns
        {
            get
            {
                if (_checkIns == null)
                {
                    var newCollection = new FixupCollection<CheckIn>();
                    newCollection.CollectionChanged += FixupCheckIns;
                    _checkIns = newCollection;
                }
                return _checkIns;
            }
            set
            {
                if (!ReferenceEquals(_checkIns, value))
                {
                    var previousValue = _checkIns as FixupCollection<CheckIn>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCheckIns;
                    }
                    _checkIns = value;
                    var newValue = value as FixupCollection<CheckIn>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCheckIns;
                    }
                }
            }
        }
        private ICollection<CheckIn> _checkIns;
    
        public virtual ICollection<LoggedClimb> LoggedClimbs
        {
            get
            {
                if (_loggedClimbs == null)
                {
                    var newCollection = new FixupCollection<LoggedClimb>();
                    newCollection.CollectionChanged += FixupLoggedClimbs;
                    _loggedClimbs = newCollection;
                }
                return _loggedClimbs;
            }
            set
            {
                if (!ReferenceEquals(_loggedClimbs, value))
                {
                    var previousValue = _loggedClimbs as FixupCollection<LoggedClimb>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupLoggedClimbs;
                    }
                    _loggedClimbs = value;
                    var newValue = value as FixupCollection<LoggedClimb>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupLoggedClimbs;
                    }
                }
            }
        }
        private ICollection<LoggedClimb> _loggedClimbs;
    
        public virtual ICollection<Opinion> Opinions
        {
            get
            {
                if (_opinions == null)
                {
                    var newCollection = new FixupCollection<Opinion>();
                    newCollection.CollectionChanged += FixupOpinions;
                    _opinions = newCollection;
                }
                return _opinions;
            }
            set
            {
                if (!ReferenceEquals(_opinions, value))
                {
                    var previousValue = _opinions as FixupCollection<Opinion>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupOpinions;
                    }
                    _opinions = value;
                    var newValue = value as FixupCollection<Opinion>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupOpinions;
                    }
                }
            }
        }
        private ICollection<Opinion> _opinions;
    
        public virtual ICollection<PartnerCall> PartnerCalls
        {
            get
            {
                if (_partnerCalls == null)
                {
                    var newCollection = new FixupCollection<PartnerCall>();
                    newCollection.CollectionChanged += FixupPartnerCalls;
                    _partnerCalls = newCollection;
                }
                return _partnerCalls;
            }
            set
            {
                if (!ReferenceEquals(_partnerCalls, value))
                {
                    var previousValue = _partnerCalls as FixupCollection<PartnerCall>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPartnerCalls;
                    }
                    _partnerCalls = value;
                    var newValue = value as FixupCollection<PartnerCall>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPartnerCalls;
                    }
                }
            }
        }
        private ICollection<PartnerCall> _partnerCalls;
    
        public virtual UserSiteSettings UserSiteSetting
        {
            get { return _userSiteSetting; }
            set
            {
                if (!ReferenceEquals(_userSiteSetting, value))
                {
                    var previousValue = _userSiteSetting;
                    _userSiteSetting = value;
                    FixupUserSiteSetting(previousValue);
                }
            }
        }
        private UserSiteSettings _userSiteSetting;

        #endregion
        #region Association Fixup
    
        private void FixupUserSiteSetting(UserSiteSettings previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.Profile, this))
            {
                previousValue.Profile = null;
            }
    
            if (UserSiteSetting != null)
            {
                UserSiteSetting.Profile = this;
            }
        }
    
        private void FixupAlerts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Alert item in e.NewItems)
                {
                    item.Profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Alert item in e.OldItems)
                {
                    if (ReferenceEquals(item.Profile, this))
                    {
                        item.Profile = null;
                    }
                }
            }
        }
    
        private void FixupPartnerCallSubscriptions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PartnerCallSubscription item in e.NewItems)
                {
                    item.Profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PartnerCallSubscription item in e.OldItems)
                {
                    if (ReferenceEquals(item.Profile, this))
                    {
                        item.Profile = null;
                    }
                }
            }
        }
    
        private void FixupPosts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Post item in e.NewItems)
                {
                    item.Profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Post item in e.OldItems)
                {
                    if (ReferenceEquals(item.Profile, this))
                    {
                        item.Profile = null;
                    }
                }
            }
        }
    
        private void FixupMedia(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Media item in e.NewItems)
                {
                    item.Profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Media item in e.OldItems)
                {
                    if (ReferenceEquals(item.Profile, this))
                    {
                        item.Profile = null;
                    }
                }
            }
        }
    
        private void FixupMediaOpinions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MediaOpinion item in e.NewItems)
                {
                    item.Profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MediaOpinion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Profile, this))
                    {
                        item.Profile = null;
                    }
                }
            }
        }
    
        private void FixupUserPersonalityMedias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserPersonalityMedia item in e.NewItems)
                {
                    item.Profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserPersonalityMedia item in e.OldItems)
                {
                    if (ReferenceEquals(item.Profile, this))
                    {
                        item.Profile = null;
                    }
                }
            }
        }
    
        private void FixupCheckIns(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CheckIn item in e.NewItems)
                {
                    item.Profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CheckIn item in e.OldItems)
                {
                    if (ReferenceEquals(item.Profile, this))
                    {
                        item.Profile = null;
                    }
                }
            }
        }
    
        private void FixupLoggedClimbs(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (LoggedClimb item in e.NewItems)
                {
                    item.Profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LoggedClimb item in e.OldItems)
                {
                    if (ReferenceEquals(item.Profile, this))
                    {
                        item.Profile = null;
                    }
                }
            }
        }
    
        private void FixupOpinions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Opinion item in e.NewItems)
                {
                    item.Profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Opinion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Profile, this))
                    {
                        item.Profile = null;
                    }
                }
            }
        }
    
        private void FixupPartnerCalls(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PartnerCall item in e.NewItems)
                {
                    item.Profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PartnerCall item in e.OldItems)
                {
                    if (ReferenceEquals(item.Profile, this))
                    {
                        item.Profile = null;
                    }
                }
            }
        }

        #endregion
    }
}
