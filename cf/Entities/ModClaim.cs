//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace cf.Entities
{
    public partial class ModClaim
    {
        #region Primitive Properties
    
        public virtual System.Guid ID
        {
            get;
            set;
        }
    
        public virtual System.Guid ObjectID
        {
            get { return _objectID; }
            set
            {
                if (_objectID != value)
                {
                    if (ObjectModMeta != null && ObjectModMeta.ID != value)
                    {
                        ObjectModMeta = null;
                    }
                    _objectID = value;
                }
            }
        }
        private System.Guid _objectID;
    
        public virtual System.Guid UserID
        {
            get { return _userID; }
            set
            {
                if (_userID != value)
                {
                    if (ModProfile != null && ModProfile.ID != value)
                    {
                        ModProfile = null;
                    }
                    _userID = value;
                }
            }
        }
        private System.Guid _userID;

        #endregion
        #region Navigation Properties
    
        public virtual ObjectModMeta ObjectModMeta
        {
            get { return _objectModMeta; }
            set
            {
                if (!ReferenceEquals(_objectModMeta, value))
                {
                    var previousValue = _objectModMeta;
                    _objectModMeta = value;
                    FixupObjectModMeta(previousValue);
                }
            }
        }
        private ObjectModMeta _objectModMeta;
    
        public virtual ModProfile ModProfile
        {
            get { return _modProfile; }
            set
            {
                if (!ReferenceEquals(_modProfile, value))
                {
                    var previousValue = _modProfile;
                    _modProfile = value;
                    FixupModProfile(previousValue);
                }
            }
        }
        private ModProfile _modProfile;

        #endregion
        #region Association Fixup
    
        private void FixupObjectModMeta(ObjectModMeta previousValue)
        {
            if (previousValue != null && previousValue.ModClaims.Contains(this))
            {
                previousValue.ModClaims.Remove(this);
            }
    
            if (ObjectModMeta != null)
            {
                if (!ObjectModMeta.ModClaims.Contains(this))
                {
                    ObjectModMeta.ModClaims.Add(this);
                }
                if (ObjectID != ObjectModMeta.ID)
                {
                    ObjectID = ObjectModMeta.ID;
                }
            }
        }
    
        private void FixupModProfile(ModProfile previousValue)
        {
            if (previousValue != null && previousValue.ModClaims.Contains(this))
            {
                previousValue.ModClaims.Remove(this);
            }
    
            if (ModProfile != null)
            {
                if (!ModProfile.ModClaims.Contains(this))
                {
                    ModProfile.ModClaims.Add(this);
                }
                if (UserID != ModProfile.ID)
                {
                    UserID = ModProfile.ID;
                }
            }
        }

        #endregion
    }
}
