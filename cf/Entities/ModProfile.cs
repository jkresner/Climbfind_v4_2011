//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace cf.Entities
{
    public partial class ModProfile
    {
        #region Primitive Properties
    
        public virtual System.Guid ID
        {
            get;
            set;
        }
    
        public virtual int Reputation
        {
            get;
            set;
        }
    
        public virtual string Role
        {
            get;
            set;
        }
    
        public virtual int PlacesAdded
        {
            get;
            set;
        }
    
        public virtual int ClimbsAdded
        {
            get;
            set;
        }
    
        public virtual int VerifiedEdits
        {
            get;
            set;
        }
    
        public virtual System.DateTime ModeratorSinceUtc
        {
            get;
            set;
        }
    
        public virtual System.DateTime LastActivityUtc
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<ModAction> ModActions
        {
            get
            {
                if (_modActions == null)
                {
                    var newCollection = new FixupCollection<ModAction>();
                    newCollection.CollectionChanged += FixupModActions;
                    _modActions = newCollection;
                }
                return _modActions;
            }
            set
            {
                if (!ReferenceEquals(_modActions, value))
                {
                    var previousValue = _modActions as FixupCollection<ModAction>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupModActions;
                    }
                    _modActions = value;
                    var newValue = value as FixupCollection<ModAction>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupModActions;
                    }
                }
            }
        }
        private ICollection<ModAction> _modActions;
    
        public virtual ICollection<ModClaim> ModClaims
        {
            get
            {
                if (_modClaims == null)
                {
                    var newCollection = new FixupCollection<ModClaim>();
                    newCollection.CollectionChanged += FixupModClaims;
                    _modClaims = newCollection;
                }
                return _modClaims;
            }
            set
            {
                if (!ReferenceEquals(_modClaims, value))
                {
                    var previousValue = _modClaims as FixupCollection<ModClaim>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupModClaims;
                    }
                    _modClaims = value;
                    var newValue = value as FixupCollection<ModClaim>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupModClaims;
                    }
                }
            }
        }
        private ICollection<ModClaim> _modClaims;

        #endregion
        #region Association Fixup
    
        private void FixupModActions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ModAction item in e.NewItems)
                {
                    item.ModProfile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ModAction item in e.OldItems)
                {
                    if (ReferenceEquals(item.ModProfile, this))
                    {
                        item.ModProfile = null;
                    }
                }
            }
        }
    
        private void FixupModClaims(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ModClaim item in e.NewItems)
                {
                    item.ModProfile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ModClaim item in e.OldItems)
                {
                    if (ReferenceEquals(item.ModProfile, this))
                    {
                        item.ModProfile = null;
                    }
                }
            }
        }

        #endregion
    }
}
