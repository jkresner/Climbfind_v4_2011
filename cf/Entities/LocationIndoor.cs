//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace cf.Entities
{
    public partial class LocationIndoor : LocationEF
    {
        #region Primitive Properties
    
        public virtual bool IsPrivate
        {
            get;
            set;
        }
    
        public virtual string Address
        {
            get;
            set;
        }
    
        public virtual string MapAddress
        {
            get;
            set;
        }
    
        public virtual string Logo
        {
            get;
            set;
        }
    
        public virtual string Website
        {
            get;
            set;
        }
    
        public virtual string BlogRssUrl
        {
            get;
            set;
        }
    
        public virtual string ContactEmail
        {
            get;
            set;
        }
    
        public virtual string ContactPhone
        {
            get;
            set;
        }
    
        public virtual string Prices
        {
            get;
            set;
        }
    
        public virtual int FloorspaceInSqMeters
        {
            get;
            set;
        }
    
        public virtual int HeightInMeters
        {
            get;
            set;
        }
    
        public virtual int NumberOfLines
        {
            get;
            set;
        }
    
        public virtual bool HasTopRope
        {
            get;
            set;
        }
    
        public virtual bool HasBoulder
        {
            get;
            set;
        }
    
        public virtual bool HasLead
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<Setter> Setters
        {
            get
            {
                if (_setters == null)
                {
                    var newCollection = new FixupCollection<Setter>();
                    newCollection.CollectionChanged += FixupSetters;
                    _setters = newCollection;
                }
                return _setters;
            }
            set
            {
                if (!ReferenceEquals(_setters, value))
                {
                    var previousValue = _setters as FixupCollection<Setter>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSetters;
                    }
                    _setters = value;
                    var newValue = value as FixupCollection<Setter>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSetters;
                    }
                }
            }
        }
        private ICollection<Setter> _setters;

        #endregion
        #region Association Fixup
    
        private void FixupSetters(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Setter item in e.NewItems)
                {
                    if (!item.LocationsIndoors.Contains(this))
                    {
                        item.LocationsIndoors.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Setter item in e.OldItems)
                {
                    if (item.LocationsIndoors.Contains(this))
                    {
                        item.LocationsIndoors.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
